#!/usr/bin/env julia

# process arguments
help = false
solver = "GLPK"
model_file = nothing
report_dir = nothing
numworkers = "1"
optind = 1
while optind <= length(ARGS)
    if ARGS[optind] in ("-s", "--solver")
        global optind += 1
        global solver = ARGS[optind]
    elseif ARGS[optind] in ("-n", "--numworkers")
        global optind +=1
        global numworkers = ARGS[optind]    
    elseif ARGS[optind] == "-h"
        global help = true
    else
        push!(freeargs, ARGS[optind])
    end
    global optind += 1
end

ok = true
if length(freeargs) == 2
    global model_file, report_dir = freeargs
else
    global ok = false
    @error "Expected precisely 2 arguments: the model and the output directory."
end

isnothing(model_file) && begin
    global ok = false
    @error "Model file not specified"
end

isnothing(report_dir) && begin
    global ok = false
    @error "Output dir not specified"
end

if !ok
    global help = true
end

if help
    println(
        """Usage: fbcmt-memote-run [-s|--solver <solver>] [-h|--help] [-n|--numworkers <1>] <model> <report_dir>""",
    )
    exit(ok ? 0 : 1)
end

if !isfile(model_file)
    @error "model argument is not a name of a file"
    global ok = false
end

if !ok
    exit(1)
end

solver = Symbol(solver)
nw = parse(Int64, numworkers)

import FBCModelTests.Memote
@eval import $solver
using Distributed

if nw > 1
    addprocs(nw)
    @everywhere FBCModelTests, FBCModelTests.Memote
    @everywhere @eval using $solver
end

optimizer = @eval $solver.Optimizer

@info "Initialization done, starting MEMOTE..." model_file report_dir optimizer numworkers

# run the Memote
Memote.run_tests(model_file, optimizer; workers=workers())
